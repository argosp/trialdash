apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: argos-prod
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "14400"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "14400"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "14400"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  tls:
    - hosts:
      - argos.new-aks-stage.linnovate.net
      - root.new-aks-stage.linnovate.net
      secretName: nginx-argos-production-letsencrypt
  rules:
  - host: argos.new-aks-stage.linnovate.net
    http:
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              name: trialdash
              port:
                number: 3131
  - host: argos.new-aks-stage.linnovate.net
    http:
      paths:
        - path: /graphql
          pathType: ImplementationSpecific
          backend:
            service:
              name: trialgraph
              port:
                number: 8888
  # - host: root.new-aks-stage.linnovate.net
  #   http:
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  #         backend:
  #           service:
  #             name: root-app-service
  #             port:
  #               number: 3000
  - host: argos.new-aks-stage.linnovate.net
    http:
      paths:
        - path: /uploads
          pathType: ImplementationSpecific
          backend:
            service:
              name: trialgraph
              port:
                number: 8888